import board

from kmk.extensions.led import LED
from kmk.extensions.media_keys import MediaKeys
from kmk.extensions.oled_sh1107 import (
    Oled,
    OledData,
)
from kmk.extensions.rgb import RGB, AnimationModes
from kmk.keys import KC
from kmk.kmk_keyboard import KMKKeyboard
from kmk.scanners import DiodeOrientation

keyboard = KMKKeyboard()

# I2C pins for the mini OLED display
keyboard.SCL = board.GP16
keyboard.SDA = board.GP17

oled_ext = Oled(
    OledData(
        entries=[
            OledData.oled_text_entry(text="Kyria v1.4", x=0, y=0),
            OledData.oled_text_entry(text="KB2040", x=0, y=10),
            OledData.oled_text_entry(text="Layer: ", x=0, y=20),
            OledData.oled_text_entry(text="BASE", x=40, y=20, layer=0),
            OledData.oled_text_entry(text="LOWER", x=40, y=20, layer=3),
            OledData.oled_text_entry(text="RAISE", x=40, y=20, layer=4),
            OledData.oled_text_entry(text="ADJUST", x=40, y=20, layer=6),
        ]
    ),
    height=64,
    device_address=0x3D,
    flip=True,
)

keyboard.extensions.append(oled_ext)

led_ext = LED(
    led_pin=[
        board.LED,
    ],
    brightness=100,
    brightness_step=5,
    brightness_limit=100,
    breathe_center=1.5,
    animation_mode=AnimationModes.STATIC,
    animation_speed=1,
    user_animation=None,
    val=100,
)
keyboard.extensions.append(led_ext)

# Neopixel on XIAO RP2040
frontglow = RGB(
    pixel_pin=board.NEOPIXEL,
    num_pixels=1,
    val_limit=100,
    val_default=25,
    animation_mode=AnimationModes.RAINBOW,
)
keyboard.extensions.append(frontglow)

keyboard.col_pins = (board.GP6, board.GP7, board.GP8)
keyboard.row_pins = (board.GP2, board.GP3, board.GP4, board.GP5)
keyboard.diode_orientation = DiodeOrientation.ROW2COL

media_keys = MediaKeys()
keyboard.extensions.append(media_keys)

# Matrix 4x3 keymap, 12 keys in total
keyboard.keymap = [
    [
        KC.N1,
        KC.N2,
        KC.N3,
        KC.N4,
        KC.N5,
        KC.N6,
        KC.N7,
        KC.N8,
        KC.N9,
        KC.N0,
        KC.A,
        KC.B,
    ]
]

if __name__ == '__main__':
    print(keyboard.extensions)
    keyboard.go()